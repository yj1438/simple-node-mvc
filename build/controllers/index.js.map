{"version":3,"sources":["controllers/index.js"],"names":[],"mappings":"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","file":"controllers/index.js","sourcesContent":["'use strict';\nconst request = require('request'),\n      fs = require('fs'),\n      crypto = require('crypto'),\n      CtrCache = require('../common/CtrCache');\n\nconst http2Service = require('../service/http2Service'),\n      refService = require('../service/refService');\n\nconst protocolMap = {\n    '1': 'http 1.x',\n    '2': 'spdy/2',\n    '3': 'spdy/3',\n    '3.1': 'spdy/3.1',\n    '4': 'http 2'\n};\n\nlet uaDataStore = new CtrCache();\n\n/*\n * 生成格式化的 uaData\n * 包括 UA 的识别\n 1:\n * API KEY ea731ec4\n * UA_PARSE_URL = 'http://useragentapi.com/api/v3/json/ea731ec4/' + encodeURIComponent(userAgent);\n 2:\n * UA_PARSE_URL = 'http://www.useragentstring.com/?uas=' + encodeURIComponent(userAgent) + '&getJSON=all';\n */\nfunction makeUaData (userAgent, callback) {\n    let data = {},\n        uaData = {};\n    \n    const UA_PARSE_URL = 'http://www.useragentstring.com/?uas=' + encodeURIComponent(userAgent) + '&getJSON=all';\n    \n    request(UA_PARSE_URL, function (error, response, body) {\n        if (!error && response.statusCode === 200) {\n            uaData = JSON.parse(body);\n            //组装 data\n            data.ua_string = userAgent;\n            data.os_name = uaData[\"os_name\"];\n            data.os_version = uaData[\"os_versionNumber\"];\n            data.agent_name = uaData[\"agent_name\"];\n            data.agent_version = uaData[\"agent_version\"];\n            //处理特殊 UA\n            let uaMatch = userAgent.match(/(UCBrowser)\\/([\\d.]+)/)                          //UC\n                || userAgent.match(/(MicroMessenger)\\/([\\d.]+)/)                    //微信\n                || userAgent.match(/(MQQBrowser)\\/([\\d.]+)/)                        //QQ\n                || userAgent.match(/(baidubrowser)\\/([\\d.]+)/)                      //baidu\n                || userAgent.match(/(baiduboxapp)\\/([\\d.]+)/)                      //baidubox\n                || userAgent.match(/(LieBaoFast)\\/([\\d.]+)/)                        //猎豹\n                || userAgent.match(/(SogouMobileBrowser)\\/([\\d.]+)/)                //搜狗\n                || userAgent.match(/(360 Aphone Browser) \\(([\\d.]+)\\)/);            //360\n            if (uaMatch) {\n                data.agent_name = uaMatch[1];\n                data.agent_version = uaMatch[2];\n            } else if (data.agent_name === 'Android Webkit Browser') {\n                //泛 chrome 浏览器\n                if (uaMatch = userAgent.match(/Chrome\\/([\\d.]+)/)) {\n                    data.agent_name = 'Chrome';\n                    data.agent_version = uaMatch[1];\n                }\n                //android browser\n                if (uaMatch = userAgent.match(/Version\\/([\\d.]+)/)) {\n                    data.agent_name = 'Android Browser';\n                    data.agent_version = data.agent_version + ', ' + uaMatch[1]; \n                }\n                //webview\n                if (uaMatch = userAgent.match(/wv/)) {\n                    data.agent_name = 'Android Webview';\n                }\n            }\n            callback(data);\n        } else {\n            callback(null);\n        }\n    });\n}\n\n/**\n * \n */\nexports.index = function () {\n    \n    //this.renderJson(this.params);\n    let self_req = this.req,\n        data = {},\n        userAgent = this.req.headers['user-agent'];\n    \n    //制作 HASHID\n    let hashId;\n    try {\n        let hash = crypto.createHash('sha256');\n        hash.update(userAgent);\n        hashId = hash.digest('hex');\n    } catch (err) {\n        //throw err;\n        console.log(new Date() + \": \" + userAgent);\n        hashId = null;\n    }\n    \n    //如果没有获得 HASHID，说明是非正常浏览器的访问，可直接返回\n    if (!hashId) {\n        this.renderJson({info: userAgent, message: 'userAgent 无法识别'});\n        return;\n    }\n    \n    //进行去重性的添加\n    if (uaDataStore.has(hashId)) {\n        //console.log('正在处理' + hashId + '...');\n    } else {\n        uaDataStore.add(hashId);\n        http2Service.findByHashid(hashId, (err, rows) => {\n            if (err) {\n                uaDataStore.remove(hashId);\n                console.log(err);\n                //this.handler500(this.req, this.res, err);\n            } else {\n                if (!rows || rows.length === 0) {\n                    /*\n                     * 此处有问题，从 AG 网站请求回来的间隙内有可能有一样 hash_id 的请求到来\n                     * 此时还没有入表，所以会造成重复 hash_id 入表的情况\n                     * 所以有了uaDataStore\n                     */\n                    makeUaData(userAgent, (uaData) => {\n                        if (!uaData) {\n                            uaDataStore.remove(hashId);\n                            return;\n                        }\n                        //补充其它信息\n                        uaData.hash_id = hashId;\n                        uaData.is_spdy = this.req.isSpdy ? 1 : 0;\n                        uaData.protocol = protocolMap[this.req.spdyVersion];\n                        uaData.ctr = uaDataStore.getCTR(hashId);\n                        http2Service.add(uaData, (err, result) => {\n                            if (err) {\n                                console.log(err);\n                            } else {\n                                console.log(result.insertId + '+++' + hashId);\n                            }\n                            uaDataStore.remove(hashId);\n                        });\n                    });\n                } else {\n                    http2Service.addCTR(hashId, uaDataStore.getCTR(hashId));\n                    uaDataStore.remove(hashId);\n                    //是否将已有的这个记录加点击\n                }\n            }\n        });\n    }\n    \n    /*\n     * 对来源 ref 进行统计\n     */\n    let ref = this.params.ref ? decodeURIComponent(this.params.ref) : null;\n    if (ref) {\n        //制作 HASHID\n        let refId, refData = {};\n        try {\n            let hash = crypto.createHash('sha256');\n            hash.update(ref);\n            refId = hash.digest('hex');\n        } catch (err) {\n            //throw err;\n            refId = null;\n        }\n        if (refId) {\n            refData.id = refId;\n            refData.ref = ref;\n            refData.protocol = this.req.spdyVersion;\n            refService.addCTR(refData);\n        }\n    }\n    \n    data.title = \"\";\n    data.userAgent = userAgent;\n    data.isSpdy = '当前客户端' + (this.req.isSpdy ? '支持' : '不支持') + ' SPDY/H2 !!!';\n    data.protocol = protocolMap[this.req.spdyVersion];\n    this.render('index/index', data);\n};\n"],"sourceRoot":"/source/"}