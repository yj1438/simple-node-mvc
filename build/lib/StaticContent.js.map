{"version":3,"sources":["lib/StaticContent.js"],"names":[],"mappings":"AAAA;;AAEA,IAAM,MAAM,QAAQ,KAAR,CAAZ;AAAA,IACI,OAAO,QAAQ,MAAR,CADX;AAAA,IAEI,KAAK,QAAQ,IAAR,CAFT;AAAA,IAGI,OAAO,QAAQ,MAAR,CAHX;AAAA,IAII,SAAS,QAAQ,WAAR,CAJb;AAAA,IAKI,YAAY,QAAQ,aAAR,CALhB;AAAA,IAMI,eAAe,QAAQ,gBAAR,CANnB;;AAQA,IAAM,gBAAgB,SAAhB,aAAgB,CAAU,GAAV,EAAe,GAAf,EAAoB;AACtC,SAAK,GAAL,GAAW,GAAX;AACA,SAAK,GAAL,GAAW,GAAX;AACH,CAHD;;AAKA,cAAc,SAAd,CAAwB,MAAxB,GAAiC,aAAa,GAA9C;;AAEA,cAAc,SAAd,CAAwB,MAAxB,GAAiC,UAAU,QAAV,EAAoB;AACjD,QAAI,CAAC,QAAL,EAAe;AACX,mBAAW,KAAK,IAAL,CAAU,QAAQ,GAAR,EAAV,EAAyB,OAAO,aAAhC,EAA+C,IAAI,KAAJ,CAAU,KAAK,GAAL,CAAS,GAAnB,EAAwB,QAAvE,CAAX;AACH;AACD;AACA,QAAI,eAAe,KAAK,QAAL,CAAc,KAAK,IAAL,CAAU,QAAQ,GAAR,EAAV,EAAyB,OAAO,aAAhC,CAAd,EAA8D,QAA9D,CAAnB;AACA,QAAI,aAAa,OAAb,CAAqB,IAArB,IAA6B,CAAC,CAAlC,EAAqC;AACjC,kBAAU,UAAV,CAAqB,KAAK,GAA1B,EAA+B,KAAK,GAApC;AACA;AACH;AACD;AACA,QAAI,CAAC,GAAG,UAAH,CAAc,QAAd,CAAD,IAA4B,GAAG,QAAH,CAAY,QAAZ,EAAsB,WAAtB,EAAhC,EAAqE;AACjE,kBAAU,UAAV,CAAqB,KAAK,GAA1B,EAA+B,KAAK,GAApC;AACA;AACH;;AAED;AACA,QAAI,mBAAJ;AAAA,QACI,aAAa,EADjB;AAAA,QAEI,gBAFJ;;AAIA;AACA,QAAI,OAAO,YAAP,IAAuB,OAAO,YAAP,GAAsB,CAAjD,EAAoD;AAChD,mBAAW,eAAX,IAA8B,aAAa,OAAO,YAAlD;AACA,mBAAW,SAAX,IAAwB,IAAI,IAAJ,CAAS,IAAI,IAAJ,GAAW,OAAX,KAAwB,OAAO,YAAP,GAAsB,IAAvD,CAAxB;AACH,KAHD,MAGO;AACH,qBAAa;AACT;AACA,6BAAiB,UAFR;AAGT,uBAAW,IAAI,IAAJ;AAHF,SAAb;AAKH;AACD,QAAI;AACA,qBAAa,GAAG,gBAAH,CAAoB,QAApB,CAAb;AACA,kBAAU,KAAK,OAAL,CAAa,QAAb,CAAV;AACA,kBAAU,UAAU,QAAQ,KAAR,CAAc,CAAd,CAAV,GAA6B,MAAvC;AACA,aAAK,MAAL,CAAY,UAAZ,EAAwB,OAAxB,EAAiC,UAAjC;AACH,KALD,CAKE,OAAO,GAAP,EAAY;AACV,kBAAU,UAAV,CAAqB,KAAK,GAA1B,EAA+B,KAAK,GAApC,EAAyC,GAAzC;AACA;AACH;AACJ,CAzCD;;AA2CA,OAAO,OAAP,GAAiB,aAAjB","file":"lib/StaticContent.js","sourcesContent":["'use strict';\n\nconst url = require('url'),\n    path = require('path'),\n    fs = require('fs'),\n    zlib = require('zlib'),\n    config = require('../config'),\n    httpError = require('./httpError'),\n    responseUtil = require('./responseUtil');\n\nconst StaticContent = function (req, res) {\n    this.req = req;\n    this.res = res;\n};\n\nStaticContent.prototype.output = responseUtil.out;\n\nStaticContent.prototype.handle = function (filePath) {\n    if (!filePath) {\n        filePath = path.join(process.cwd(), config.staticFileDir, url.parse(this.req.url).pathname);\n    }\n    //进行目录权限的判断\n    let relativePath = path.relative(path.join(process.cwd(), config.staticFileDir), filePath);\n    if (relativePath.indexOf('..') > -1) {\n        httpError.handler404(this.req, this.res);\n        return;\n    }\n    //如是不存在或不是文件\n    if (!fs.existsSync(filePath) || fs.statSync(filePath).isDirectory()) {\n        httpError.handler404(this.req, this.res);\n        return;\n    }\n    \n    //\n    let fileStream,\n        resHeaders = {},\n        extName;\n    \n    //打开缓存\n    if (config.cacheControl && config.cacheControl > 0) {\n        resHeaders['Cache-Control'] = 'max-age=' + config.cacheControl;\n        resHeaders['Expires'] = new Date(new Date().getTime() + (config.cacheControl * 1000));\n    } else {\n        resHeaders = {\n            //把静态的缓存去掉\n            'Cache-Control': 'no-cache',\n            'Expires': new Date()\n        };\n    }\n    try {\n        fileStream = fs.createReadStream(filePath);\n        extName = path.extname(filePath);\n        extName = extName ? extName.slice(1) : 'html';\n        this.output(fileStream, extName, resHeaders);\n    } catch (err) {\n        httpError.handler500(this.req, this.res, err);\n        return;\n    }\n};\n\nmodule.exports = StaticContent;"],"sourceRoot":"/source/"}