{"version":3,"sources":["lib/route.js"],"names":[],"mappings":"AAAA;;;;AAIA;;AAEA,IAAM,YAAY,QAAQ,KAAR,EAAe,KAAjC;AAAA,IACI,YAAY,QAAQ,cAAR,CADhB;;AAGA;AACA,IAAI,SAAS;AACT,SAAK,EADI;AAET,UAAM,EAFG;AAGT,UAAM,EAHG;AAIT,SAAK,EAJI;AAKT,YAAQ;AALC,CAAb;;AAQA;;;;;;;;;;AAUA,SAAS,YAAT,CAAsB,GAAtB,EAA2B;AACvB,QAAI,kBAAJ;AACA,SAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,IAAI,MAAxB,EAAgC,IAAI,IAAI,CAAxC,EAA2C;AACvC,oBAAY,IAAI,CAAJ,CAAZ;AACA,YAAI,aAAa,UAAU,GAAvB,IAA8B,UAAU,UAA5C,EAAwD;AACpD,gBAAM,SAAS,UAAU,MAAV,GAAmB,UAAU,MAAV,CAAiB,WAAjB,EAAnB,GAAoD,KAAnE;AACA,mBAAO,MAAP,EAAe,IAAf,CAAoB;AAChB,qBAAK,UAAU,GADC,EACI;AACpB,4BAAY,UAAU,UAFN;AAGhB,wBAAQ,UAAU,MAAV,IAAoB;AAHZ,aAApB;AAKH;AACJ;AACJ;AACD;AACA,aAAa,SAAb;;AAEA,QAAQ,aAAR,GAAwB,UAAU,GAAV,EAAe,MAAf,EAAuB;AAC3C;AACA,aAAS,SAAS,OAAO,WAAP,EAAT,GAAgC,KAAzC;AACA,QAAM,WAAW,UAAU,GAAV,EAAe,QAAhC;AAAA,QACI,WAAW,OAAO,MAAP,CADf;AAEA,QAAI,QAAQ;AACJ,oBAAY,IADR;AAEJ,gBAAQ,IAFJ;AAGJ,cAAM;AAHF,KAAZ;AAKA,SAAK,IAAI,CAAT,IAAc,QAAd,EAAwB;AACpB,YAAI,SAAS,cAAT,CAAwB,CAAxB,CAAJ,EAAgC;AAC5B;AACA,kBAAM,IAAN,GAAa,SAAS,CAAT,EAAY,GAAZ,CAAgB,IAAhB,CAAqB,QAArB,CAAb;AACA,gBAAI,MAAM,IAAV,EAAgB;AACZ,sBAAM,UAAN,GAAmB,SAAS,CAAT,EAAY,UAA/B;AACA,sBAAM,MAAN,GAAe,SAAS,CAAT,EAAY,MAA3B;AACA,sBAAM,IAAN,CAAW,KAAX,GAHY,CAGQ;AACpB;AACH;AACJ;AACJ;AACD;AACA,WAAO,KAAP;AACH,CAxBD","file":"lib/route.js","sourcesContent":["/**\n * @author qleelulu\n * @blog http://qleelulu.cnblogs.com\n */\n'use strict';\n\nconst url_parse = require('url').parse,\n    route_map = require('../route_map');\n\n//根据http请求的method来分别保存route规则\nlet routes = {\n    get: [],\n    post: [],\n    head: [],\n    put: [],\n    delete: []\n};\n\n/**\n * 注册route规则\n * 示例：\n * route.map({\n *     method:'post',\n *     url: /\\/blog\\/post\\/(\\d+)\\/?$/i,\n *     controller: 'blog',\n *     action: 'showBlogPost'\n * })\n */\nfunction constructMap(map) {\n    let routeItem;\n    for (let i = 0; i < map.length; i = i + 1) {\n        routeItem = map[i];\n        if (routeItem && routeItem.url && routeItem.controller) {\n            const method = routeItem.method ? routeItem.method.toLowerCase() : 'get';\n            routes[method].push({\n                url: routeItem.url, //url匹配正则\n                controller: routeItem.controller,\n                action: routeItem.action || 'index'\n            });\n        }\n    }\n}\n//加载路由\nconstructMap(route_map);\n\nexports.getActionInfo = function (url, method) {\n    // url: /blog/index?page=1 ,则pathname为: /blog/index\n    method = method ? method.toLowerCase() : 'get';\n    const pathname = url_parse(url).pathname,\n        m_routes = routes[method];\n    let route = {\n            controller: null,\n            action: null,\n            args: null\n        };\n    for (let k in m_routes) {\n        if (m_routes.hasOwnProperty(k)) {\n            //正则匹配\n            route.args = m_routes[k].url.exec(pathname);\n            if (route.args) {\n                route.controller = m_routes[k].controller;\n                route.action = m_routes[k].action;\n                route.args.shift(); //第一个值为匹配到的整个url，去掉\n                break;\n            }            \n        }\n    }\n    //如果匹配到route，r大概是 {controller:'blog', action:'index', args:['1']}\n    return route;\n};"],"sourceRoot":"/source/"}