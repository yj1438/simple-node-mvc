{"version":3,"sources":["common/CtrCache.js"],"names":[],"mappings":"AAAA;;AAGA;;;;;;AAKA,IAAI,WAAW,SAAX,QAAW,GAAW;AACtB,SAAK,WAAL,GAAmB,EAAnB;AACH,CAFD;;AAIA,SAAS,SAAT,CAAmB,GAAnB,GAAyB,UAAU,MAAV,EAAkB;AACvC,QAAI,CAAC,KAAK,WAAL,CAAiB,MAAjB,CAAL,EAA+B;AAC3B,aAAK,WAAL,CAAiB,MAAjB,IAA2B,CAA3B;AACH;AACJ,CAJD;;AAMA;;;;AAIA,SAAS,SAAT,CAAmB,GAAnB,GAAyB,UAAU,MAAV,EAAkB;AACvC,QAAI,KAAK,WAAL,CAAiB,MAAjB,CAAJ,EAA8B;AAC1B,aAAK,WAAL,CAAiB,MAAjB;AACA,eAAO,IAAP;AACH,KAHD,MAGO;AACH,eAAO,KAAP;AACH;AACJ,CAPD;;AASA,SAAS,SAAT,CAAmB,MAAnB,GAA4B,UAAU,MAAV,EAAkB;AAC1C,WAAQ,OAAO,KAAK,WAAL,CAAiB,MAAjB,CAAf;AACH,CAFD;;AAIA,SAAS,SAAT,CAAmB,MAAnB,GAA4B,UAAU,MAAV,EAAkB;AAC1C,WAAO,SAAS,KAAK,WAAL,CAAiB,MAAjB,CAAT,EAAmC,EAAnC,CAAP;AACH,CAFD;;AAIA,OAAO,OAAP,GAAiB,QAAjB","file":"common/CtrCache.js","sourcesContent":["'use strict';\n\n\n/**\n * 一个简单的点击率数据缓存，可用来记录短时间内多次的同源访问\n * 将其用此缓存先存起来，到上次数据库操作结束后再进行一次性的数据写入\n * \n */\nlet CtrCache = function() {\n    this.tempHashIds = {};\n}\n\nCtrCache.prototype.add = function (hashId) {\n    if (!this.tempHashIds[hashId]) {\n        this.tempHashIds[hashId] = 1;\n    }\n}\n\n/*\n * 判断是否 hashid 已经在存在\n * 如果已经存在，点击率自加1\n */\nCtrCache.prototype.has = function (hashId) {\n    if (this.tempHashIds[hashId]) {\n        this.tempHashIds[hashId] ++;\n        return true;\n    } else {\n        return false;\n    }\n}\n\nCtrCache.prototype.remove = function (hashId) {\n    return (delete this.tempHashIds[hashId]);\n}\n\nCtrCache.prototype.getCTR = function (hashId) {\n    return parseInt(this.tempHashIds[hashId], 10);\n}\n\nmodule.exports = CtrCache;"],"sourceRoot":"/source/"}